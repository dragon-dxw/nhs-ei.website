name: Terraform CI

on:
  push:
    branches: main
  pull_request:

jobs:
  validate-terraform:
    name: Validate Terraform
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v1

    - name: Check for terraform version mismatch
      run: |
        DOTFILE_VERSION=$(cat deployment/.terraform-version)
        TERRAFORM_IMAGE_REFERENCES=$(grep "uses: docker://hashicorp/terraform" .github/workflows/terraform-ci.yml | grep -v TERRAFORM_IMAGE_REFERENCES | wc -l | tr -d ' ')
        if [ "$(grep "docker://hashicorp/terraform:${DOTFILE_VERSION}" .github/workflows/terraform-ci.yml | wc -l | tr -d ' ')" != "$TERRAFORM_IMAGE_REFERENCES" ]
        then
          echo -e "\033[1;31mError: terraform version in deployment/.terraform-version file does not match docker://hashicorp/terraform versions in .github/workflows/terraform-ci.yml"
          exit 1
        fi

    - name: Remove azure backend
      run: rm ./deployment/backend.tf

    - name: Run a Terraform init
      uses: docker://hashicorp/terraform:1.1.8
      with:
        entrypoint: terraform
        args: -chdir=deployment init

    - name: Run a Terraform validate
      uses: docker://hashicorp/terraform:1.1.8
      with:
        entrypoint: terraform
        args: -chdir=deployment validate

    - name: Run a Terraform format check
      uses: docker://hashicorp/terraform:1.1.8
      with:
        path: ./deployment
        args: -chdir=deployment fmt -check=true -diff=true
